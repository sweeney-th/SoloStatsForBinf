load("data/e100.RData")
barplot(e100, ylim = c(0, 7), width = 0.7, xlim = c(-0.5, 100.5),
names.arg = seq(along = e100), col = "darkolivegreen")
load("data/e100.RData")
barplot(e100, ylim = c(0, 9), width = 0.7, xlim = c(-0.5, 100.5),
names.arg = seq(along = e100), col = "darkolivegreen")
load("data/e100.RData")
barplot(e100, ylim = c(0, 8), width = 0.7, xlim = c(-0.5, 100.5),
names.arg = seq(along = e100), col = "darkolivegreen")
load("data/e100.RData")
barplot(e100, ylim = c(0, 7), width = 0.7, xlim = c(-0.5, 100.5),
names.arg = seq(along = e100), col = "darkolivegreen")
# odds of excactly 3 instances in a piosson distribution with rate 5
dpois(x = 3, lambda = 5)
# pass a range using :
barplot(dpois(0:12, 5), names.arg = 0:12, col = "red")
# Blood types of 19 hypoethetical people
genotype = c("AA","AO","BB","AO","OO","AO","AA","BO","BO",
"AO","BB","AO","BO","AB","OO","AB","BB","AO","AO")
table(genotype)
# fair coin
rbinom(15, prob = 0.5, size = 1)
# emulate the 2/3 falling into the right of the box
rbinom(15, prob = 2/3, size = 1)
# to just get the number, not the vector of results:
rbinom(1, prob = 2/3, size = 12)
# probability mass distribution
probabilities = dbinom(0:15, prob = 0.3, size = 15)
round(probabilities, 2)
# we can plot it thusly
barplot(probabilities, names.arg = 0:15, col = "blue")
# example - rate of 5, P(X=3) - will be like the first example
5^3 * exp(-5) / factorial(3)
rbinom(1, prob = 5e-4, size = 10000)
simulations = rbinom(n = 300000, prob = 5e-4, size = 10000)
barplot(table(simulations), col = "lavender")
# load it randomly into the namespace because we hate ourselves
load("data/e100.RData")
# plot the results of our simulated experiment
barplot(e100, ylim = c(0, 7), width = 0.7, xlim = c(-0.5, 100.5),
names.arg = seq(along = e100), col = "darkolivegreen")
set.seed(123)
# run 100,000 simulations of a random piosson distribution of 100 values with l = 0.5
maxes = replicate(100000, {
# find the max each time
max(rpois(100, 0.5))
})
# show a table of the max values
table(maxes)
# we can find the answer thusly
sum(maxes >=7)/length(maxes)
# or we can use this shortcut getting 1s and 0s from the boolean vector
# find the mean of the boolean vector'
mean(maxes >= 7)
runif(1)
runif(1)
runif(1)
runif(1,2)
?runif
runif(1:4,2)
runif(1:4)
pvec = rep(1/4, 4)
t(rmultinom(1, prob = pvec, size = 8))
pvec = rep(1/4, 4)
t(rmultinom(1, prob = pvec, size = 8))
pvec = rep(1/4, 4)
t(rmultinom(1, prob = pvec, size = 8))
print("WTF")
# 4 values with odds of 1/4 each
pvec = rep(1/4, 4)
t(rmultinom(1, prob = pvec, size = 8))
ep(1/4, 4)
rep(1/4, 4)
rep(1/4, 4)
# 4 values with odds of 1/4 each
pvec = rep(1/4, 4) #  0.25 0.25 0.25 0.25
t(rmultinom(1, prob = pvec, size = 8))
# 4 values with odds of 1/4 each
pvec = rep(1/4, 4) #  0.25 0.25 0.25 0.25
t(rmultinom(1, prob = pvec, size = 8))
# 4 values with odds of 1/4 each
pvec = rep(1/4, 4) #  0.25 0.25 0.25 0.25
t(rmultinom(1, prob = pvec, size = 8))
# 4 values with odds of 1/4 each
pvec = rep(1/4, 4) #  0.25 0.25 0.25 0.25
t(rmultinom(1, prob = pvec, size = 8))
rmultinom(n = 8, prob = pvec, size = 1)
rmultinom(n = 8, prob = pvec, size = 1)
rmultinom(n = 1, prob = pvec, size = 8)
rmultinom(n = 8, prob = pvec, size = 1)
rmultinom(n = 1, prob = pvec, size = 8)
rmultinom(n = 8, prob = pvec, size = 1)
rmultinom(n = 1, prob = pvec, size = 8)
rmultinom(n = 8, prob = pvec, size = 1)
rmultinom(n = 1, prob = pvec, size = 8)
obsunder0 = rmultinom(1000, prob = pvec, size = 20)
dim(obsunder0)
obsunder0 = rmultinom(1000, prob = pvec, size = 20)
dim(obsunder0)
obsunder0[, 1:11]
# odds of excactly 3 instances in a piosson distribution with rate 5
dpois(x = 3, lambda = 5)
# pass a range using :
barplot(dpois(0:12, 5), names.arg = 0:12, col = "red")
# Blood types of 19 hypoethetical people
genotype = c("AA","AO","BB","AO","OO","AO","AA","BO","BO",
"AO","BB","AO","BO","AB","OO","AB","BB","AO","AO")
table(genotype)
# fair coin
rbinom(15, prob = 0.5, size = 1)
# emulate the 2/3 falling into the right of the box
rbinom(15, prob = 2/3, size = 1)
# to just get the number, not the vector of results:
rbinom(1, prob = 2/3, size = 12)
# probability mass distribution
probabilities = dbinom(0:15, prob = 0.3, size = 15)
round(probabilities, 2)
# we can plot it thusly
barplot(probabilities, names.arg = 0:15, col = "blue")
# example - rate of 5, P(X=3) - will be like the first example
5^3 * exp(-5) / factorial(3)
rbinom(1, prob = 5e-4, size = 10000)
simulations = rbinom(n = 300000, prob = 5e-4, size = 10000)
barplot(table(simulations), col = "lavender")
# load it randomly into the namespace because we hate ourselves
load("data/e100.RData")
# plot the results of our simulated experiment
barplot(e100, ylim = c(0, 7), width = 0.7, xlim = c(-0.5, 100.5),
names.arg = seq(along = e100), col = "darkolivegreen")
set.seed(123)
# run 100,000 simulations of a random piosson distribution of 100 values with l = 0.5
maxes = replicate(100000, {
# find the max each time
max(rpois(100, 0.5))
})
# show a table of the max values
table(maxes)
# we can find the answer thusly
sum(maxes >=7)/length(maxes)
# or we can use this shortcut getting 1s and 0s from the boolean vector
# find the mean of the boolean vector'
mean(maxes >= 7)
# 4 values with odds of 1/4 each
pvec = rep(1/4, 4) #  0.25 0.25 0.25 0.25
t(rmultinom(1, prob = pvec, size = 8))
# this has 1 trials of 1/4 8 times
rmultinom(n = 8, prob = pvec, size = 1)
# this has 8 trials of 1/4 once
rmultinom(n = 1, prob = pvec, size = 8)
obsunder0 = rmultinom(1000, prob = pvec, size = 20)
dim(obsunder0)
obsunder0[, 1:11]
sum((obsunder0[, 1] - expected0)^2 / expected0)
# odds of excactly 3 instances in a piosson distribution with rate 5
dpois(x = 3, lambda = 5)
# pass a range using :
barplot(dpois(0:12, 5), names.arg = 0:12, col = "red")
# Blood types of 19 hypoethetical people
genotype = c("AA","AO","BB","AO","OO","AO","AA","BO","BO",
"AO","BB","AO","BO","AB","OO","AB","BB","AO","AO")
table(genotype)
# fair coin
rbinom(15, prob = 0.5, size = 1)
# emulate the 2/3 falling into the right of the box
rbinom(15, prob = 2/3, size = 1)
# to just get the number, not the vector of results:
rbinom(1, prob = 2/3, size = 12)
# probability mass distribution
probabilities = dbinom(0:15, prob = 0.3, size = 15)
round(probabilities, 2)
# we can plot it thusly
barplot(probabilities, names.arg = 0:15, col = "blue")
# example - rate of 5, P(X=3) - will be like the first example
5^3 * exp(-5) / factorial(3)
rbinom(1, prob = 5e-4, size = 10000)
simulations = rbinom(n = 300000, prob = 5e-4, size = 10000)
barplot(table(simulations), col = "lavender")
# load it randomly into the namespace because we hate ourselves
load("data/e100.RData")
# plot the results of our simulated experiment
barplot(e100, ylim = c(0, 7), width = 0.7, xlim = c(-0.5, 100.5),
names.arg = seq(along = e100), col = "darkolivegreen")
set.seed(123)
# run 100,000 simulations of a random piosson distribution of 100 values with l = 0.5
maxes = replicate(100000, {
# find the max each time
max(rpois(100, 0.5))
})
# show a table of the max values
table(maxes)
# we can find the answer thusly
sum(maxes >=7)/length(maxes)
# or we can use this shortcut getting 1s and 0s from the boolean vector
# find the mean of the boolean vector'
mean(maxes >= 7)
# 4 values with odds of 1/4 each
pvec = rep(1/4, 4) #  0.25 0.25 0.25 0.25
t(rmultinom(1, prob = pvec, size = 8))
# this has 1 trials of 1/4 8 times
rmultinom(n = 8, prob = pvec, size = 1)
# this has 8 trials of 1/4 once
rmultinom(n = 1, prob = pvec, size = 8)
obsunder0 = rmultinom(1000, prob = pvec, size = 20)
dim(obsunder0)
obsunder0[, 1:11]
expected0 = pvec * 20
sum((obsunder0[, 1] - expected0)^2 / expected0)
sum((obsunder0[, 2] - expected0)^2 / expected0)
sum((obsunder0[, 3] - expected0)^2 / expected0)
# 20 observations
expected0 = pvec * 20
# explicitly see the first 3 columns
sum((obsunder0[, 1] - expected0)^2 / expected0)
sum((obsunder0[, 2] - expected0)^2 / expected0)
sum((obsunder0[, 3] - expected0)^2 / expected0)
# a function to calculate on all of them
stat = function(obsvd, exptd = 20 * pvec) {
sum((obsvd - exptd)^2 / exptd)
}
stat(obsunder0[, 1])
# 20 observations
expected0 = pvec * 20
# explicitly see the first 3 columns
sum((obsunder0[, 1] - expected0)^2 / expected0)
sum((obsunder0[, 2] - expected0)^2 / expected0)
sum((obsunder0[, 3] - expected0)^2 / expected0)
# a function to calculate on all of them
stat = function(obsvd, exptd = 20 * pvec) {
sum((obsvd - exptd)^2 / exptd)
}
stat(obsunder0[, 1])
S0 = apply(obsunder0, 2, stat)
S0
# 20 observations
expected0 = pvec * 20
# explicitly see the first 3 columns
sum((obsunder0[, 1] - expected0)^2 / expected0)
sum((obsunder0[, 2] - expected0)^2 / expected0)
sum((obsunder0[, 3] - expected0)^2 / expected0)
# a function to calculate on all of them
stat = function(obsvd, exptd = 20 * pvec) {
sum((obsvd - exptd)^2 / exptd)
}
stat(obsunder0[, 1])
S0 = apply(obsunder0, 2, stat)
S0
S0 = apply(obsunder0, 2, stat)
head(S0)
S0 = apply(obsunder0, 2, stat)
head(S0)
hist(S0, breaks = 25, col = "lavender", main = "")
S0 = apply(obsunder0, 2, stat)
head(S0)
hist(S0, breaks = 25, col = "lavender", main = "")
# odds of excactly 3 instances in a piosson distribution with rate 5
dpois(x = 3, lambda = 5)
# pass a range using :
barplot(dpois(0:12, 5), names.arg = 0:12, col = "red")
# Blood types of 19 hypoethetical people
genotype = c("AA","AO","BB","AO","OO","AO","AA","BO","BO",
"AO","BB","AO","BO","AB","OO","AB","BB","AO","AO")
table(genotype)
# fair coin
rbinom(15, prob = 0.5, size = 1)
# emulate the 2/3 falling into the right of the box
rbinom(15, prob = 2/3, size = 1)
# to just get the number, not the vector of results:
rbinom(1, prob = 2/3, size = 12)
# probability mass distribution
probabilities = dbinom(0:15, prob = 0.3, size = 15)
round(probabilities, 2)
# we can plot it thusly
barplot(probabilities, names.arg = 0:15, col = "blue")
# example - rate of 5, P(X=3) - will be like the first example
5^3 * exp(-5) / factorial(3)
rbinom(1, prob = 5e-4, size = 10000)
simulations = rbinom(n = 300000, prob = 5e-4, size = 10000)
barplot(table(simulations), col = "lavender")
# load it randomly into the namespace because we hate ourselves
load("data/e100.RData")
# plot the results of our simulated experiment
barplot(e100, ylim = c(0, 7), width = 0.7, xlim = c(-0.5, 100.5),
names.arg = seq(along = e100), col = "darkolivegreen")
set.seed(123)
# run 100,000 simulations of a random piosson distribution of 100 values with l = 0.5
maxes = replicate(100000, {
# find the max each time
max(rpois(100, 0.5))
})
# show a table of the max values
table(maxes)
# we can find the answer thusly
sum(maxes >=7)/length(maxes)
# or we can use this shortcut getting 1s and 0s from the boolean vector
# find the mean of the boolean vector'
mean(maxes >= 7)
# 4 values with odds of 1/4 each
pvec = rep(1/4, 4) #  0.25 0.25 0.25 0.25
t(rmultinom(1, prob = pvec, size = 8))
# this has 1 trials of 1/4 8 times
rmultinom(n = 8, prob = pvec, size = 1)
# this has 8 trials of 1/4 once
rmultinom(n = 1, prob = pvec, size = 8)
obsunder0 = rmultinom(1000, prob = pvec, size = 20)
dim(obsunder0)
obsunder0[, 1:11]
# 20 observations
expected0 = pvec * 20
# explicitly see the first 3 columns
sum((obsunder0[, 1] - expected0)^2 / expected0)
sum((obsunder0[, 2] - expected0)^2 / expected0)
sum((obsunder0[, 3] - expected0)^2 / expected0)
# a function to calculate on all of them
stat = function(obsvd, exptd = 20 * pvec) {
sum((obsvd - exptd)^2 / exptd)
}
stat(obsunder0[, 1])
S0 = apply(obsunder0, 2, stat)
head(S0)
hist(S0, breaks = 25, col = "lavender", main = "")
S0 = apply(obsunder0, 2, stat)
head(S0)
summary(S0)
hist(S0, breaks = 25, col = "lavender", main = "")
q95 = quantile(S0, probs = 0.95)
q95
q95 = quantile(S0, probs = 0.95)
q95
# odds of excactly 3 instances in a piosson distribution with rate 5
dpois(x = 3, lambda = 5)
# pass a range using :
barplot(dpois(0:12, 5), names.arg = 0:12, col = "red")
# Blood types of 19 hypoethetical people
genotype = c("AA","AO","BB","AO","OO","AO","AA","BO","BO",
"AO","BB","AO","BO","AB","OO","AB","BB","AO","AO")
table(genotype)
# fair coin
rbinom(15, prob = 0.5, size = 1)
# emulate the 2/3 falling into the right of the box
rbinom(15, prob = 2/3, size = 1)
# to just get the number, not the vector of results:
rbinom(1, prob = 2/3, size = 12)
# probability mass distribution
probabilities = dbinom(0:15, prob = 0.3, size = 15)
round(probabilities, 2)
# we can plot it thusly
barplot(probabilities, names.arg = 0:15, col = "blue")
# example - rate of 5, P(X=3) - will be like the first example
5^3 * exp(-5) / factorial(3)
rbinom(1, prob = 5e-4, size = 10000)
simulations = rbinom(n = 300000, prob = 5e-4, size = 10000)
barplot(table(simulations), col = "lavender")
# load it randomly into the namespace because we hate ourselves
load("data/e100.RData")
# plot the results of our simulated experiment
barplot(e100, ylim = c(0, 7), width = 0.7, xlim = c(-0.5, 100.5),
names.arg = seq(along = e100), col = "darkolivegreen")
set.seed(123)
# run 100,000 simulations of a random piosson distribution of 100 values with l = 0.5
maxes = replicate(100000, {
# find the max each time
max(rpois(100, 0.5))
})
# show a table of the max values
table(maxes)
# we can find the answer thusly
sum(maxes >=7)/length(maxes)
# or we can use this shortcut getting 1s and 0s from the boolean vector
# find the mean of the boolean vector'
mean(maxes >= 7)
# 4 values with odds of 1/4 each
pvec = rep(1/4, 4) #  0.25 0.25 0.25 0.25
t(rmultinom(1, prob = pvec, size = 8))
# this has 1 trials of 1/4 8 times
rmultinom(n = 8, prob = pvec, size = 1)
# this has 8 trials of 1/4 once
rmultinom(n = 1, prob = pvec, size = 8)
obsunder0 = rmultinom(1000, prob = pvec, size = 20)
dim(obsunder0)
obsunder0[, 1:11]
# 20 observations
expected0 = pvec * 20
# explicitly see the first 3 columns
sum((obsunder0[, 1] - expected0)^2 / expected0)
sum((obsunder0[, 2] - expected0)^2 / expected0)
sum((obsunder0[, 3] - expected0)^2 / expected0)
# a function to calculate on all of them
stat = function(obsvd, exptd = 20 * pvec) {
sum((obsvd - exptd)^2 / exptd)
}
stat(obsunder0[, 1])
S0 = apply(obsunder0, 2, stat)
head(S0)
summary(S0)
hist(S0, breaks = 25, col = "lavender", main = "")
q95 = quantile(S0, probs = 0.95)
q95
pvecA = c(3/8, 1/4, 3/12, 1/8)
sumv(pvecA)
sum(pvecA)
pvecA = c(3/8, 1/4, 3/12, 1/8) # randomly chosen I think?
# run the test again
observed = rmultinom(1000, prob = pvecA, size = 20)
dim(observed)
pvecA = c(3/8, 1/4, 3/12, 1/8) # randomly chosen I think?
# run the test again
observed = rmultinom(1000, prob = pvecA, size = 20)
S1 = apply(observed, 2, stat)
S1
sum(S1 > q95)
power = mean(S1 > q95)
power
pvecA = c(3/8, 1/4, 3/12, 1/8) # randomly chosen I think?
# run the test again
observed = rmultinom(1000, prob = pvecA, size = 20)
# apply our variance function
S1 = apply(observed, 2, stat)
sum(S1 > q95)
power = mean(S1 > q95)
power
set.seed(235569515)
# odds of excactly 3 instances in a piosson distribution with rate 5
dpois(x = 3, lambda = 5)
# pass a range using :
barplot(dpois(0:12, 5), names.arg = 0:12, col = "red")
# Blood types of 19 hypoethetical people
genotype = c("AA","AO","BB","AO","OO","AO","AA","BO","BO",
"AO","BB","AO","BO","AB","OO","AB","BB","AO","AO")
table(genotype)
# fair coin
rbinom(15, prob = 0.5, size = 1)
# emulate the 2/3 falling into the right of the box
rbinom(15, prob = 2/3, size = 1)
# to just get the number, not the vector of results:
rbinom(1, prob = 2/3, size = 12)
# probability mass distribution
probabilities = dbinom(0:15, prob = 0.3, size = 15)
round(probabilities, 2)
# we can plot it thusly
barplot(probabilities, names.arg = 0:15, col = "blue")
# example - rate of 5, P(X=3) - will be like the first example
5^3 * exp(-5) / factorial(3)
rbinom(1, prob = 5e-4, size = 10000)
simulations = rbinom(n = 300000, prob = 5e-4, size = 10000)
barplot(table(simulations), col = "lavender")
# load it randomly into the namespace because we hate ourselves
load("data/e100.RData")
# plot the results of our simulated experiment
barplot(e100, ylim = c(0, 7), width = 0.7, xlim = c(-0.5, 100.5),
names.arg = seq(along = e100), col = "darkolivegreen")
set.seed(123)
# run 100,000 simulations of a random piosson distribution of 100 values with l = 0.5
maxes = replicate(100000, {
# find the max each time
max(rpois(100, 0.5))
})
# show a table of the max values
table(maxes)
# we can find the answer thusly
sum(maxes >=7)/length(maxes)
# or we can use this shortcut getting 1s and 0s from the boolean vector
# find the mean of the boolean vector'
mean(maxes >= 7)
# 4 values with odds of 1/4 each
pvec = rep(1/4, 4) #  0.25 0.25 0.25 0.25
t(rmultinom(1, prob = pvec, size = 8))
# this has 1 trials of 1/4 8 times
rmultinom(n = 8, prob = pvec, size = 1)
# this has 8 trials of 1/4 once
rmultinom(n = 1, prob = pvec, size = 8)
obsunder0 = rmultinom(1000, prob = pvec, size = 20)
dim(obsunder0)
obsunder0[, 1:11]
# 20 observations
expected0 = pvec * 20
# explicitly see the first 3 columns
sum((obsunder0[, 1] - expected0)^2 / expected0)
sum((obsunder0[, 2] - expected0)^2 / expected0)
sum((obsunder0[, 3] - expected0)^2 / expected0)
# a function to calculate on all of them
stat = function(obsvd, exptd = 20 * pvec) {
sum((obsvd - exptd)^2 / exptd)
}
stat(obsunder0[, 1])
S0 = apply(obsunder0, 2, stat)
head(S0)
summary(S0)
hist(S0, breaks = 25, col = "lavender", main = "")
q95 = quantile(S0, probs = 0.95)
q95
pvecA = c(3/8, 1/4, 3/12, 1/8) # randomly chosen I think?
# run the test again
observed = rmultinom(1000, prob = pvecA, size = 20)
# apply our variance function
S1 = apply(observed, 2, stat)
# which are higher than the 95th (of the previous test???)
sum(S1 > q95)
power = mean(S1 > q95)
power
pvec = rep(1/4, 4)
pvec = rep(1/4, 4)
pvec
pvec = rep(1/4, 4)
pvec
obsunder0 = rmultinom(1000, prob = pvec, size = 20)
obsunder0
obsunder0 = rmultinom(1000, prob = pvec, size = 20)
obsunder0 = rmultinom(1000, prob = pvec, size = 20)
dim(obsunder0)
pvec = rep(1/4, 4)
pvec
expected0 = pvec * 20
